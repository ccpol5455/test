

mp3,mp4,jpg都是压缩的格式

文档doc,pdf,xfs



                        |------server1(nginx+php+)
------>proxy(调度器)-----|------server2(nginx+php)
                        |------server3(nginx+php)

                        |------server1-----|
------>proxy(调度器)-----|------server2-----|-----mysql+集群
                        |------server3-----|-----nosqla


能不存储到数据库，一定不要存储在数据库里

图片，视频，音频等都不存储数据库中
文字，字符：metedate(数据的数据)必须放在数据库里(强大的查询功能)

性能：CPU缓存--->---内存--->磁盘--->数据库
价格：CPU缓存--->---内存--->磁盘--->数据库

连立一个数据库(表)
id  name  time  author size fbl    key  addr 
001 a.jpg 2017  anon   4M   1080p  凤姐  d:\a.jpg
 
SQL数据库：mysql,oracle,sqlserver
NOSQL数据库(缓存数据库)：mencached(重启数据全部丢失),redis,mongodb


mencached:

#yum -y install mencached
#systemctl start mencached
#vim /usr/lib/systemd/system/memcached.service(配置文件)
EnvironmentFile=-/etc/sysconfig/memcached(环境变量文件)
ExecStart=/usr/bin/memcached -u $USER(用户) -p $PORT(端口) -m $CACHESIZE(内存大小) -c $MAXCONN(并发连接几个网段) $OPTIONS

官网没有给读写的工具，yum -y install telnet
telnet 192.168.4.5(连接什么ip) 11211(连接什么端口)
set写数据  get读数据

set fengjie 0 180 3
jpg
STORED
设置一个key名称为fengjie 0表示不压缩 180秒后数据会自动删除 存的内容是3个字符 回车输入3个字符

set fengjie 0 180 3
jpg
STORED
set abc 0 5 3
tom
STORED
get abc
VALUE abc 0 3
tom
END
get abc
END

add新建
replace 替换 和set用法一样
append 向变量里追加数据
delete 删除一个变量


LNMP+memcached

部署LNMP环境（如果环境中已经存在LNMP环境本步骤可以忽略）

1）使用yum安装基础依赖包
[root@proxy ~]# yum -y install gcc openssl-devel pcre-devel zlib-devel
.. ..

2）源码安装Nginx
[root@proxy ~]# tar -zxvf nginx-1.12.2.tar.gz
[root@proxy ~]# cd nginx-1.12.2
[root@proxy nginx-1.12.2]#  ./configure   \
> --with-http_ssl_module 
[root@proxy nginx-1.12.2]# make && make install

3）安装MariaDB数据库
[root@proxy ~]# yum –y install  mariadb  mariadb-server  mariadb-devel

4）安装PHP
[root@proxy ~]# yum –y install  php  php-mysql
[root@proxy ~]# yum –y localinstall  php-fpm-5.4.16-42.el7.x86_64.rpm

5）为PHP添加memcache扩展
[root@proxy ~]# yum –y install  php-pecl-memcache

启动服务

1）启动Nginx服务
这里需要注意的是，如果服务器上已经启动了其他监听80端口的服务软件（如httpd），则需要先关闭该服务，否则会出现冲突。
[root@proxy ~]# systemctl stop  httpd                //如果该服务存在，则关闭该服务
[root@proxy ~]# /usr/local/nginx/sbin/nginx
[root@proxy ~]# netstat -utnlp | grep :80
tcp    0    0 0.0.0.0:80        0.0.0.0:*        LISTEN        32428/nginx         

2）启动MySQL服务
[root@proxy ~]# systemctl start mariadb
[root@proxy ~]# systemctl status mariadb

3）启动PHP-FPM服务
[root@proxy ~]# systemctl start php-fpm
[root@proxy ~]# systemctl status php-fpm

4）关闭SELinux、防火墙
[root@proxy ~]# setenforce 0
[root@proxy ~]# firewall-cmd --set-default-zone=trusted


创建PHP页面，使用PHP语言测试memcached服务

创建PHP首页文档/usr/local/nginx/html/index.php，测试页面可以参考lnmp_soft/php_scripts/mem.php：
 [root@proxy ~]# vim /usr/local/nginx/html/test.php
<?php
$memcache=new Memcache;                //创建memcache对象
$memcache->connect('localhost',11211) or die ('could not connect!!');
$memcache->set('key','test');             //定义变量
$get_values=$memcache->get('key');        //获取变量值
echo $get_values;
?>

客户端测试

客户端使用浏览器访问服务器PHP首页文档，检验对memcached的操作是否成功：
[root@client ~]# firefox http://192.168.4.5/test.php


session和cookie

client1----------->server
              第一次访问sessionID(用户1信息)随机生成ID号
      <-------cookie:SID 返回页面 给用户ID号
刷新页面(浏览器自动) ---->cookie(SID)给服务器

本地session
vim /etc/php-fpm.d/www.conf 
php_value[session.save_handler] = files   session以文件的方式储存
php_value[session.save_path] = /var/lib/php/session  储存session的路径

session共享
php_value[session.save_handler] = memcache  session以文件的方式储存
php_value[session.save_path] = tcp://192.168.2.5:11211  储存session的路径
web1和web2都要安装php-pecl-memcache程序并重启systemctl restart php-fpm

google-chrome




























