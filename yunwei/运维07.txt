


配置GRE VPN

启用GRE模块

1）查看计算机当前加载的模块
[root@client ~]# lsmod                            //显示模块列表
[root@client ~]# lsmod  | grep ip_gre            //确定是否加载了gre模块
2)加载模块ip_gre
[root@client ~]# modprobe  ip_gre 
3）查看模块信息
[root@client ~]# modinfo ip_gre
filename:       /lib/modules/3.10.0-693.el7.x86_64/kernel/net/ipv4/ip_gre.ko.xz
alias:          netdev-gretap0
alias:          netdev-gre0
alias:          rtnl-link-gretap
alias:          rtnl-link-gre
license:        GPL
rhelversion:    7.4
srcversion:     F37A2BF90692F86E3A8BD15
depends:        ip_tunnel,gre
intree:         Y
vermagic:       3.10.0-693.el7.x86_64 SMP mod_unload modversions 
signer:         CentOS Linux kernel signing key
sig_key:        DA:18:7D:CA:7D:BE:53:AB:05:BD:13:BD:0C:4E:21:F4:22:B6:A4:9C
sig_hashalgo:   sha256
parm:           log_ecn_error:Log packets received with corrupted ECN (bool)
      
步骤二：Client主机创建VPN隧道

1）创建隧道
[root@client ~]# ~]# ip tunnel add tun0  mode gre \ 
>  remote 201.1.2.5 local 201.1.2.10
//ip tunnel add创建隧道（隧道名称为tun0），ip tunnel help可以查看帮助
//mode设置隧道使用gre模式
//local后面跟本机的IP地址，remote后面是与其他主机建立隧道的对方IP地址
2）启用该隧道（类似与设置网卡up）
[root@client ~]# ip link set tun0 up         //设置UP
2）为VPN配置隧道IP地址
[root@client ~]# ip addr add 10.10.10.10/24 peer 10.10.10.5/24 \
>  dev tun0
//为隧道tun0设置本地IP地址（10.10.10.10.10/24）
//隧道对面的主机IP的隧道IP为10.10.10.5/24
3）关闭防火墙
[root@client ~]# firewall-cmd --set-default-zone=trusted
步骤三：Proxy主机创建VPN隧道

1）创建隧道
[root@proxy ~]# ~]# ip tunnel add tun0  mode gre \ 
>  remote 201.1.2.10 local 201.1.2.5
//ip tunnel add创建隧道（隧道名称为tun0），ip tunnel help可以查看帮助
//mode设置隧道使用gre模式
//local后面跟本机的IP地址，remote后面是与其他主机建立隧道的对方IP地址
2）启用该隧道（类似与设置网卡up）
[root@proxy ~]# ip link set tun0 up         //设置UP
2）为VPN配置隧道IP地址
[root@proxy ~]# ip addr add 10.10.10.5/24 peer 10.10.10.10/24 \
>  dev tun0
//为隧道tun0设置本地IP地址（10.10.10.10.5/24）
//隧道对面的主机IP的隧道IP为10.10.10.10/24
3）关闭防火墙
[root@proxy ~]# firewall-cmd --set-default-zone=trusted



创建PPTP VPN


部署VPN服务器

1）安装软件包（软件包参考lnmp_soft）
[root@proxy ~]# yum localinstall pptpd-1.4.0-2.el7.x86_64.rpm
[root@proxy ~]# rpm -qc pptpd
/etc/ppp/options.pptpd
/etc/pptpd.conf
/etc/sysconfig/pptpd
2)修改配置文件
[root@proxy ~]# vim /etc/pptpd.conf
.. ..
localip 201.1.2.5                                    //服务器本地IP
remoteip 192.168.3.1-50                            //分配给客户端的IP池
[root@proxy ~]# vim /etc/ppp/options.pptpd
require-mppe-128                                    //使用MPPE加密数据
ms-dns 8.8.8.8                                    //DNS服务器
[root@proxy ~]# vim /etc/ppp/chap-secrets            //修改账户配置文件
jacob           *               123456      *
//用户名    服务器标记    密码    客户端
[root@proxy ~]# echo "1" > /proc/sys/net/ipv4/ip_forward    //开启路由转发
3）启动服务
[root@proxy ~]# systemctl start pptpd
[root@proxy ~]# systemctl enable pptpd
[root@proxy ~]# firewall-cmd --set-default-zone=trusted
4）翻墙设置（非必需操作）
[root@proxy ~]# iptables -t nat -A POSTROUTING -s 192.168.3.0/24 \
>  -j SNAT --to-source 201.1.2.5



创建L2TP+IPSec VPN


部署IPSec服务

1）安装软件包
[root@vpn ~]# yum -y install libreswan
2)新建IPSec密钥验证配置文件
[root@vpn ~]# cat /etc/ipsec.conf                //仅查看一下该主配置文件
.. ..
include /etc/ipsec.d/*.conf                    //加载该目录下的所有配置文件
[root@vpn ~]# vim /etc/ipsec.d/myipsec.conf            
//新建该文件，参考lnmp_soft/vpn/myipsec.conf    
conn IDC-PSK-NAT
    rightsubnet=vhost:%priv                        //允许建立的VPN虚拟网络
    also=IDC-PSK-noNAT
conn IDC-PSK-noNAT
    authby=secret                                    //加密认证
        ike=3des-sha1;modp1024                        //算法
        phase2alg=aes256-sha1;modp2048                //算法
    pfs=no
    auto=add
    keyingtries=3
    rekey=no
    ikelifetime=8h
    keylife=3h
    type=transport
    left=201.1.2.200                                //重要，服务器本机的外网IP
    leftprotoport=17/1701
    right=%any                                    //允许任何客户端连接
    rightprotoport=17/%any
3)创建IPSec预定义共享密钥
[root@vpn ~]# cat /etc/ipsec.secrets                 //仅查看，不要修改该文件
include /etc/ipsec.d/*.secrets
[root@vpn ~]# vim /etc/ipsec.d/mypass.secrets        //新建该文件
201.1.2.200   %any:    PSK    "randpass"             //randpass为密钥
                                                //201.1.2.200是VPN服务器的IP
4)启动IPSec服务
[root@vpn ~]# systemctl start ipsec        
[root@vpn ~]# netstat -ntulp |grep pluto
udp        0      0 127.0.0.1:4500          0.0.0.0:*           3148/pluto          
udp        0      0 192.168.4.200:4500      0.0.0.0:*           3148/pluto          
udp        0      0 201.1.2.200:4500        0.0.0.0:*           3148/pluto          
udp        0      0 127.0.0.1:500           0.0.0.0:*           3148/pluto          
udp        0      0 192.168.4.200:500       0.0.0.0:*           3148/pluto          
udp        0      0 201.1.2.200:500         0.0.0.0:*           3148/pluto          
udp6       0      0 ::1:500                 :::*                 3148/pluto
步骤二：部署XL2TP服务

1）安装软件包（软件包参考lnmp_soft）
[root@vpn ~]# yum localinstall xl2tpd-1.3.8-2.el7.x86_64.rpm
2) 修改xl2tp配置文件（修改3个配置文件的内容）
[root@vpn ~]#  vim  /etc/xl2tpd/xl2tpd.conf                //修改主配置文件
[global]
.. ..    
[lns default]
.. ..
ip range = 192.168.3.128-192.168.3.254                    //分配给客户端的IP池
local ip = 201.1.2.200                                //VPN服务器的IP地址
[root@vpn ~]# vim /etc/ppp/options.xl2tpd                //认证配置
require-mschap-v2                                         //添加一行，强制要求认证
#crtscts                                                //注释或删除该行
#lock                                                //注释或删除该行
root@vpn ~]# vim /etc/ppp/chap-secrets                    //修改密码文件
jacob   *       123456  *                //账户名称   服务器标记   密码   客户端IP
3）启动服务
[root@vpn ~]# systemctl start xl2tpd
[root@vpn ~]# netstat  -ntulp |grep xl2tpd        
udp     0      0 0.0.0.0:1701      0.0.0.0:*          3580/xl2tpd
4）设置路由转发，防火墙
[root@vpn ~]# echo "1" > /proc/sys/net/ipv4/ip_forward
[root@vpn ~]# firewall-cmd --set-default-zone=trusted
5）翻墙设置（非必需操作）
[root@vpn ~]# iptables -t nat -A POSTROUTING -s 192.168.3.0/24 \
>  -j SNAT --to-source 201.1.2.200




NTP时间同步



部署NTP服务

1）安装软件包
[root@proxy ~]# yum -y install chrony
[root@proxy ~]# rpm -qc chrony                        //查看配置文件列表
/etc/chrony.conf
/etc/chrony.keys
.. ..
2)修改配置文件
[root@proxy ~]# cat /etc/chrony.conf
.. ..
server 0.centos.pool.ntp.org iburst         //server用户客户端指向上层NTP服务器
allow 192.168.4.0/24                        //允许那个IP或网络访问NTP
#deny  192.168.4.1                        //拒绝那个IP或网络访问NTP
local stratum 10                            //设置NTP服务器的层数量
.. ..
4)启动NTP服务
[root@proxy ~]# systemctl  restart  chronyd
[root@proxy ~]# systemctl  enable  chronyd
5)设置防火墙
[root@proxy ~]# firewall-cmd --set-default-zone=trusted
配置客户端

1）安装软件包
[root@client ~]# yum –y install chrony
2) 修改配置文件
[root@client ~]# vim /etc/chrony.conf
server 192.168.4.5 iburst                //设置与哪台服务器同步数据
                                        //iburst参数设置重启服务后尽快同步时间
3) 将客户端时间修改为错误的时间
[root@client ~]#  date  -s  "hour:minute"         //调整时间（小时：分钟）
[root@client ~]#  date                            //查看修改后的时间
4) 重启chrony与服务器同步时间
[root@client ~]# systemctl  restart  chronyd
5) 确认时间是否已经同步
[root@client ~]# date                            //多执行几次查看结果


pssh远程套件工具

使用密码批量、多并发远程其他主机
使用密钥批量、多并发远程其他主机
批量、多并发拷贝数据到其他主机
批量、多并发从其他主机下载数据到本机
批量、多并发杀死其他主机的进程



准备工作

1）安装软件包
[root@proxy ~]# rpm -ivh  pssh-2.3.1-5.el7.noarch.rpm
2)修改/etc/hosts本地解析文件
cat /etc/hosts
… …
192.168.2.100  host1
192.168.2.200  host2
192.168.4.100  host3
… …
3)创建主机列表文件
[root@proxy ~]# cat /root/host.txt            //每行一个用户名、IP或域名
… …
root@host1
host2
host3
… …
使用密码批量、多并发远程其他主机

1）语法格式
[root@proxy ~]# man pssh                    //通过man帮助查看工具选项的作用
pssh提供并发远程连接功能
-A                使用密码远程其他主机（默认使用密钥）
-i                将输出显示在屏幕
-H                设置需要连接的主机
-h                设置主机列表文件
-p                设置并发数量
-t                设置超时时间
-o dir            设置标准输出信息保存的目录
-e dir            设置错误输出信息保存的目录
-x                传递参数给ssh
2)使用密码远程多台主机执行命令，屏幕显示标准和错误输出信息
[root@proxy ~]# pssh -i  -A -H  'host1 host2 host3'   \
>  -x '-o StrictHostKeyChecking=no'   echo hello
3)使用密码远程多台主机执行命令，不显示标准和错误输出信息，通过读取host.txt读取主机信息
[root@proxy ~]# pssh -A -h host.txt  \
>  -x '-o StrictHostKeyChecking=no' echo hello
使用密钥批量、多并发远程其他主机

1）生成密钥并发送密钥到其他主机
[root@proxy ~]# ssh-keygen -N  ''   -f /root/.ssh/id_rsa     //非交互生成密钥文件
[root@proxy ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub host1
[root@proxy ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub host2
[root@proxy ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub host3
2)使用密钥远程其他主机
[root@proxy ~]# pssh  -h host.txt -x '-o StrictHostKeyChecking=no' echo hello
3)使用密钥远程其他主机，将标准输出信息写入到/tmp目录
[root@proxy ~]# pssh  -h host.txt -o /tmp/ -x '-o StrictHostKeyChecking=	no' echo hello
步骤四：批量、多并发拷贝数据到其他主机

1）语法格式
[root@proxy ~]# man pscp.pssh                    //通过man帮助查看工具选项的作用
pscp.pssh提供并发拷贝文件功能
-r    递归拷贝目录
其他选项基本与pssh一致
2)将本地的etc.tar.gz拷贝到远程主机的根目录下
[root@proxy ~]# pscp.pssh -h host.txt  -x '-o StrictHostKeyChecking=no' etc.tar.gz / 
3)递归将本地的/etc目录拷贝到远程主机的/tmp目录下
[root@proxy ~]#  pscp.pssh -r -h host.txt  -x '-o StrictHostKeyChecking=no'  /etc   /tmp 
批量、多并发从其他主机下载数据到本机

1）语法格式
[root@proxy ~]# man pslurp                    //通过man帮助查看工具选项的作用
pslurp提供远程下载功能
选项与pscp.pssh基本一致
2)将远程主机的/etc/目录，拷贝到当前目录下，存放在对应IP下的tmp目录
[root@proxy ~]# pslurp -r -h host.txt -x '-o StrictHostKeyChecking=no' /etc /tmp
3)将远程主机的/etc/目录，拷贝到media下，存放在对应IP下的tmp目录
[root@proxy ~]# pslurp -r -h host.txt -x ‘-o StrictHostKeyChecking=no'    -L  /media   /etc   /tmp
步骤六：批量、多并发杀死其他主机的进程

1）语法格式
[root@proxy ~]# man pnuke                    //通过man帮助查看工具选项的作用
pnuke提供远程杀死进程的功能
选项与pssh基本一致
2)将远程主机上的sleep进程杀死
[root@proxy ~]# pnuke  -h host.txt -x '-o StrictHostKeyChecking=no' sleep
3)将远程主机上的test相关脚本都杀死（如：test1,testtt,test2等等）
[root@proxy ~]# pnuke  -h host.txt -x '-o StrictHostKeyChecking=no' test
4)将远程主机上的test.sh脚本杀死
[root@proxy ~]# pnuke  -h host.txt -x '-o StrictHostKeyChecking=no' test.sh



























